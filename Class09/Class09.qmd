---
title: "Class09: Halloween Candy Mini Project"
author: "Lilith Sadil, A16470107"
format: pdf
---

### Class 9 - 4.30.24

# Halloween Candy Mini Project

## 1. Importing Candy Data

In today's class, we'll examine data about candy from the "538" website. We'll start by importing the data:

```{r}
candy_file <- "candy-data.txt"
```

Now, we'll turn the

```{r}
candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

There are 85 different candies in the data set.

> Q2. How many fruity candy types are in the data set?

```{r}
sum(candy$fruity)
```

There are 38 fruity candies in the data set.

## 2. What's Your Favorite Candy?

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

My favorite candy mentioned in the dataset is the Reese's Peanut Butter cup.

```{r}
candy["Reese's Peanut Butter cup", ]$winpercent
```

The win percent of the Reese's Peanut Butter cup is 84.18%.

> > Q4. What is the win percent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

The win percent for Kit Kat is 76.77%.

> Q5. What is the win percent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

The win percent of Tootsie Roll Snack Bars is 49.65%.

There's a package called "skimr" which can help give a quick overview of a data set

```{r}
#install.packages("skimr")
library("skimr")
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the data set?

It appears that win percent is measured on a different scale compared to the the rest of the rows.

> Q7. What do you think a zero and one represent for the candy\$chocolate column?

"0" and "1" in the `candy$chocolate` column likely refer to whether or not a candy contains chocolate (0 for "no" and 1 for "yes").

> Q8. Plot a histogram of win percent values

To make a simple plot, we can use the `hist` operation in R:

```{r}
hist(candy$winpercent)
```

We can recreate this plot using ggplot:

```{r}
library(ggplot2)

win_hist = ggplot(candy) +
  aes(candy$winpercent)+
  geom_histogram()
win_hist
```

> Q9. Is the distribution of win percent values symmetrical?

The distribution of win percent values is not symmetrical; it's slightly skewed towards the left with a tail on the right.

> Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```

The center of the distribution (median) lies at 47.83% which is roughly in the middle but below 50%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

1.  We have to find all the chocolate candies,
2.  Find their win percents,
3.  And compare the mean of their win percents

```{r}
chocolate_candy_win = candy$winpercent[as.logical(candy$chocolate)]
# or chocolate_candy = candy$winpercent[candy$chocolate==1]
chocolate_candy_win
```

This has provided us with the win percents of only the candies containing chocolate. Now we can take the mean and compare them to fruit candies

```{r}
mean(chocolate_candy_win)
```

The average win percent of candy containing chocolate is 60.92%

```{r}
fruit_candy_win = candy$winpercent[as.logical(candy$fruity)]
mean(fruit_candy_win)
```

The average win percent of candy containing fruit is 44.12%. From this, we know that chocolate candies, on average, tend to be preferred over fruity candies.

> Q12. Is this difference statistically significant?

To determine if the difference in preference between chocolate/fruity candies is significant, we can use a t.test:

```{r}
t.test(chocolate_candy_win, fruit_candy_win)
```

Given that the p-value is very low (2.871e-08) when we compare these data sets, there is a statistically significant difference in the data sets.

## 3. Overall Candy Rankings

To sort numerical data, we can say:

```{r}
x = c(5, 6, 4)
sort(x)
```

`Order` works like `sort` but outputs the **order** of indicies which would create a list of increasing values. (ex. here, we get "3, 1, 2" as an output for the vector "5, 6, 4"). Now, we can insert tis list of indicies back into x to order the data: 4, 5, 6.

```{r}
order(x)
x[order(x)]
```

Now, we can use this knowledge to arrange the dataset by increasing win percent and view it in several different ways:

```{r}
index = order(candy$winpercent)
head(candy[index,]) #head shows us the first 6 items
tail(candy[index,]) #tail shows us the last 6 items
```

> Q13. What are the five least liked candy types in this set?

```{r}
head(candy[index,], 5) #5 indicates that we only see the first 5 items 
```
The 5 least liked candies on the list are: Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Hawbusters

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[index,], 5) #5 indicates that we only see the last 5 items 
```
The top five favorite candies are: Snickers, Kit Kat, Reese's Miniatures, and Reese's Peanut Butter cups.

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

#| fig-height: 10
#| fig-width: 7

ggplot(candy)+
  aes(winpercent, rownames(candy))+
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
library(ggplot2)

#| fig-height: 10
#| fig-width: 7

ggplot(candy)+
  aes(winpercent, reorder(rownames(candy), winpercent))+
  geom_col()
```

We can adjust the plot to have a height of 10 upon rendering
```{r}
ggsave("mybarplot.png", height=10)
```

\[Exported image that is a bit bigger so I can read it\] (mybarplot.png)

Now, we can change the chart so that fruity candies are pink, chocolates are a chocolate color, and bars are brown. All candies which are none of these three criteria appear gray.

```{r}
my_cols=rep("gray", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[candy$fruity == 1] = "pink"

```

```{r}
#| fig-height: 10
#| fig-width: 7

ggplot(candy)+
  aes(winpercent, reorder(rownames(candy), winpercent))+
  geom_col(fill = my_cols)
```

> Q17. What is the worst ranked chocolate candy?

From the plot alone, we can see that the lowest ranked chocolate candy is Sixlets.

> Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst.

Now, we are going to plot the win percent of candies against their price points.

```{r}
ggplot(candy)+
  aes(winpercent, pricepercent, label=rownames(candy))+
  geom_point(col=my_cols)+
  geom_label(col=my_cols)
```

We can use ggrepel to make sure that labels don't overlap:

```{r}
# install.packages("ggrepel")
library(ggrepel)
```

```{r}
library(ggrepel)
ggplot(candy)+
  aes(winpercent, pricepercent, label=rownames(candy))+
  geom_point(col=my_cols)+
  geom_text_repel(col=my_cols, size=3.3, max.overlap=30)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

It looks like Reese's Miniatures are very highly ranked and have a relatively low price point.

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

The five most expensive candies are:Nik L Nip, Nestle Smarties, Ring Pops, Hershey's Krackel, and Hershey's Milk Chocolate. Of these, Nik L Nip has the lowest win percentage (22.45%).

## 5. Exploring the Correlation Structure

```{r}
#install.packages("corrplot")
library(corrplot)

cij=cor(candy)
head(cij)
```

For example, there's a **positive** correlation between a candy having chocolate and it also having peanuts or caramel. There's also a positive correlation between chocolate being both expensive (0.505) and having a higher win percentage (0.634). Fruity candies also tend to be hard candies (correleation = 0.391).

```{r}
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

The two variables with the strongest negative correlation are fruity & chocolate. Additionally, pluribus & bar have a strong negative correlation. 

> Q23. Similarly, what two variables are most positively correlated?

Two variables with a strong positive correlation are chocolate & winpercent (i.e. people tend to prefer candies made of chocolate). Additionally chocolate & bar have a strong positive correlation (i.e. bar candies tend to be made of chocolate). 

## 6. Principal Component Analysis

We will perform a PCA of the candy. A key question is : do we need to scale the data. Yes, we determined before that the win percentages are out of 100 while the other values are between 0 and 1.

```{r}
pca = prcomp(candy, scale=TRUE)
summary(pca)
```

After scaling, we see that the first principal component (PC1) only captures 36.0% of the total variance. Adding a second pc accounts for not quite half (46.8%) of the data

An initial plot in R helps us plot PCA1 and PCA2

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

Now, we'll make this plot in ggplot, adding labels:

```{r}

my_data=cbind(candy, pca$x[,1:3])

ggplot(my_data)+
  aes(PC1, PC2, label=rownames(my_data))+
  geom_point(col=my_cols)+
  geom_text_repel(col=my_cols)
```

We can add all sorts of fancy code to make the plot look a bit nicer:

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

If we want to make the chart interactive (ex. hover over point to show its details), we can use plotly

```{r}
#install.packages("plotly")
#library(plotly)
#ggplotly(p)
```

We can also make a bar plot to show the positive and negative correlations between certain candy attribute. (ex. items along the positive axis correlate with one another - fruity candies tend to be hard and in multi packs; fruity candies tend to NOT have caramel or nougat...)

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

```{r}
res =as.data.frame(pca$rotation)

ggplot(res)+
  aes(PC1, reorder(rownames(res), PC1))+
  geom_col()
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

PC1 picked up "fruity", "pluribus", and "hard" all strongly in the positive direction. This is because our earlier correlation analysis found that fruity candies tend to come in multi-packs and are hard.
